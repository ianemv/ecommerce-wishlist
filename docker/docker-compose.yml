version: "3.8"

services:
    app:
        build:
            context: ..
            dockerfile: ./docker/Dockerfile
        container_name: ecommerce-app
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - ../:/var/www
        networks:
            - ecommerce-network

    nginx:
        image: nginx:alpine
        container_name: ecommerce-nginx
        restart: unless-stopped
        ports:
            - "8000:80"
        volumes:
            - ../:/var/www
            - ./nginx/conf.d:/etc/nginx/conf.d/
        depends_on:
            - app
        networks:
            - ecommerce-network

    db:
        image: mysql:8.0
        container_name: ecommerce-db
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
        ports:
            - "3306:3306"
        volumes:
            - dbdata:/var/lib/mysql
        networks:
            - ecommerce-network

    db_test:
        image: mysql:8.0
        container_name: ecommerce-db-test
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ecommerce_test
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
        ports:
            - "3307:3306"
        networks:
            - ecommerce-network

    redis:
        image: redis:alpine
        container_name: ecommerce-redis
        restart: unless-stopped
        ports:
            - "6379:6379"
        networks:
            - ecommerce-network

networks:
    ecommerce-network:
        driver: bridge

volumes:
    dbdata:
